# BASH SETUP
# edit 20180901T212832Z
# NOTE: chmod 755 bashrc_rosr.txt ## make this executable 

# basic PATH
#. /etc/environment
# special user
#. ~/.profile

export EDITOR="vim"
alias Top="top -u -s5"
alias Date='date -u "+%Y %m %d %H %M %S Z"'

# folders
export DAQFOLDER="$DAQPATH/ROSR"
export DAQSWFOLDER="$DAQFOLDER/sw"
export DAQDATAFOLDER="$DAQFOLDER/data"
alias gtdaq="cd $DAQSWFOLDER"

echo $PATH | grep -q -s /opt/local/bin
if [ $? -eq 1 ] ; then
    PATH=$PATH\:/opt/local/bin\:/opt/local/sbin
    export PATH
fi

echo $PATH | grep -q -s $DAQSWFOLDER
if [ $? -eq 1 ] ; then
    PATH=$PATH\:$DAQSWFOLDER\:.
    export PATH
fi

    # SETUP FILE NAME
export SETUPFILE=$DAQSWFOLDER"/setup/su.txt"

# TEST CALLS
#alias I='cd $DAQSWFOLDER; echo "NOTE: ^\ q to exit"; ./term_to_rosr'
#alias N='cd $DAQSWFOLDER; ./term_to_sbd  $SETUPFILE'
#alias P='cd $DAQSWFOLDER; ./term_to_gps  $SETUPFILE'
I () {
        ps cax | grep Z_rosr > /dev/null   # Z_rosr is the app in question
        if [ $? -eq 0 ]; then
			echo "DAQ is already running. Stop first"
        else
			cd $DAQSWFOLDER;
			echo "NOTE: ^\ q to exit";
			./term_to_sbd  $SETUPFILE
        fi
}
N () {
        ps cax | grep Z_rosr > /dev/null   # Z_rosr is the app in question
        if [ $? -eq 0 ]; then
			echo "DAQ is already running. Stop first"
        else
			cd $DAQSWFOLDER;
			echo "NOTE: ^\ q to exit";
			./term_to_sbd  $SETUPFILE
        fi
}
P () {
        ps cax | grep Z_rosr > /dev/null   # Z_rosr is the app in question
        if [ $? -eq 0 ]; then
			echo "DAQ is already running. Stop first"
        else
			cd $DAQSWFOLDER;
			echo "NOTE: ^\ q to exit";
			./term_to_gps  $SETUPFILE
        fi
}


alias Help="help"
alias help="less help.txt"
alias helpa="less help_advanced.txt"
alias helpc="less help_configuration.txt"

        # CHECK DATA
rosravg () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder rosr_avg`
    head -1 $xx
    tail $xx
}
alias Avg="rosravg";
gpsavg () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder gps_avg`
    head -1 $xx
    tail $xx
}
        # RAW
gpsraw () { 
    cd $DAQSWFOLDER;
    echo "NOTE: ^c to end"
    xx=`LastDataFolder gps_raw`
    tail $xx
}
alias Gps="gpsraw"

# RAW SINGLE
rosrraw () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder rosr_raw`
    head -1 $xx
    tail $xx
}
alias Raw="rosrraw";

# RAW CONTINUING
rosrrawc () {
    cd $DAQSWFOLDER;
    echo "NOTE: ^c to end"
    xx=`LastDataFolder rosr_raw`
    head -1 $xx
    tail -f $xx
}
alias Rawc="rosrrawc";
alias lesssu="less `LastDataFolder`/su_*.txt";
alias vimsu="vim setup/su.txt";

rosrav () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder rosr_av`
    head -1 $xx
    tail $xx
}
alias Av="rosrav";

# CONTINUING
rosrst () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder rosr_sst`
    echo "NOTE: ^c to end"
    head -1 $xx
    tail -f $xx
}
alias Sstc="rosrst";

# ONE TIME
rosrsst () {
    cd $DAQSWFOLDER;
    xx=`LastDataFolder rosr_sst`
    head -1 $xx
    tail $xx
}
alias Sst="rosrsst";

    # SCREEN
alias isscreen='screen -ls'
alias iss='screen -ls'
alias gtscreen='screen -S ROSR -d -r'

    # RUN CALLS
alias G='cd $DAQSWFOLDER;  Z_rosr `cat tmp`'
alias GG='cd $DAQSWFOLDER;  Z_gps `cat tmp`'

        #START SCREEN
Start () {
        ps cax | grep Z_rosr > /dev/null   # Z_prp is the app in question
        if [ $? -eq 0 ]; then
			echo "DAQ is already running."
        else
			touch ~/tmp/daqstart;
			KillScreen > /dev/null 2>&1;
			cd $DAQSWFOLDER;
			PrepareForRun > /dev/null;
			export RUNSETUPFILE=`cat tmp`;
			crontab $DAQSWFOLDER/tools/crontab_rosr.txt
			screen -S ROSR -d -m -c $DAQSWFOLDER/tools/screenrc_rosr.txt
			screen -S ROSR -p 2 -X stuff "GG$(printf \\r)"
			screen -S ROSR -p 1 -X stuff "G$(printf \\r)"
			isscreen
        fi
}
Startcal () {
    KillScreen;
    cd $DAQSWFOLDER; ./PrepareForRun; export RUNSETUPFILE=`cat tmp`;
    screen -S ROSR -d -m -c $DAQSWFOLDER/tools/screenrc_rosr.txt
    screen -S ROSR -p 1 -X stuff "G$(printf \\r)"
}
alias Startrosr="Start";
alias Startrosrcal="Startcal";

    #STOP DATA COLLECTION SCREEN
alias Stop="rm ~/tmp/daqstart > /dev/null 2>&1; KillScreen > /dev/null 2>&1; Stopcron > /dev/null 2>&1; Cleanuprosr > /dev/null 2>&1; echo 'DAQ Stopped'"
alias Stoprosr="Stop";

    #START AND STOP CRONTAB
alias Startcron="crontab $DAQSWFOLDER/tools/crontab_rosr.txt"
alias Stopcron="crontab -r"

#       PERL LIBRARY =============================
export DAQLIB=$MYLIB

    # KERMIT RC =====================
echo "prompt k>>" > ~/.kermrc

    # MONITOR PROGRESS
alias rosrsbd="tail -f /tmp/sbd 2>/dev/null"
alias Sbd="cat /tmp/sbd"
alias sbdlog="less +G ../data/sbdlog"

    # alias
alias daqlog="less +G $DAQDATAFOLDER/daqlog"
alias Ping="ping -c3 "
alias Archive="ArchiveRosr";
alias Wipe="ClearRosrData";
alias ll="ls -lt";
alias setup='less setup/su.txt'

cd $DAQSWFOLDER

alias bootlog="less +G ~/tmp/bootlog"
alias llb="ls -l ~/tmp"
# restart set AutoStartFlag in /etc/rc.local (ubuntu > 16.04)
if [ -e ${HOME}/tmp/AutoStartFlag ] 
    then
    rm -f ${HOME}/tmp/AutoStartFlag
    dd=$(date -u "+%Y%m%d,%H%M%SZ")
    echo "Bootbash  $dd" >> ${HOME}/tmp/bootlog
    ifdaqstart
fi

